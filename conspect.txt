Конспект 02.11.24
Информатика и программирование 
Важные навыки программиста: 
- алгоритмическое мышление
- структурирование
- декомпозиция
- не думать "в лоб"
- уметь упрощать задачу

Языки разделяются на : 
- низкоуровневые языки (понимаемые компьютером) 
- высокоуровневые языки (языки, удобные в использовании, а затем переделывающиеся в тот код, который может понять компьютер)

Типы языков программирования: 
- структурные (представление кода в виде иерархий блоков кода) 
- процедурные (разделение программы на подпрограммы)
- объектно-ориетированные (представление всего в парадигме объектов)
- функиональные (все действия выражены в виде функций) 

Язык С# - это и процедурный, и функциональный, и объектно-ориентированный

Абстракция - процесс выделения общих характеристик и функциональности объектов или системы, игнорирование деталей реализации.
Пример абстракции: 
1) Сковородка Gipfel для индукционной плиты - сковородка Gipfel - сковородка - посуда для готовки еды - посуда 
2) Пирамида Хеопса - песчаная пирамида в Гизе - песчаная пирамида в Египте - песчаная пирамида - пирамида 
3) Карета скорой помощи - машина с медицинскими работниками - машина с работниками - машина

.Net - кроссплатформенная среда с возможностью программирования на разных языках программирования с возможностью объединения в единый проект. 
Как работает .Net: 
при запуске программы все файлы на языках, поддерживающих .Net переводятся в единый CIL код, после чего CLR переводит его уже в код, понятный компьютеру

Различие между мультиязычностью и кроссплатформенностью: 
- Мультиязычность - поддержка разных языков программирования при создании одного продукта
- Кроссплатформеность - возможность использования продукта на разных оперционных системах

Решение (solition) - "контейнер" для проектов 
Проект - одна программная единица, которая может работать автономно или вместе с другими проектами
Сборка (assembly) - готовый к работе проект
